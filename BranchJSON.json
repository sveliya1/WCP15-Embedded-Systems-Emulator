{
  "B": "g_cycle_count++;\n {g_cycle_count+=2; //branch\n",
  "BN": "g_cycle_count++;\n {g_cycle_count+=2; //thumb 'narrow' version\n",
  "BL": "g_cycle_count++;\n {g_cycle_count+=2; //jump to functon\n",
  "BLN": "g_cycle_count++;\n {g_cycle_count+=2; //thumb 'narrow' version\n",
  "BCC": "g_cycle_count++;\n if (c_flag == 0) {g_cycle_count+=2; //branch if C flag clear\n",
  "BCCN": "g_cycle_count++;\n if (c_flag == 0) {g_cycle_count+=2; //thumb 'narrow' version\n",
  "BCS": "g_cycle_count++;\n if (c_flag == 1) {g_cycle_count+=2; //branch if C flag set\n",
  "BCSN": "g_cycle_count++;\n if (c_flag == 1) {g_cycle_count+=2; //thumb 'narrow' version\n",
  "BNE": "g_cycle_count++;\n if (z_flag == 0) {g_cycle_count+=2; //branch if Z flag clear\n",
  "BNEN": "g_cycle_count++;\n if (z_flag == 0) {g_cycle_count+=2; //thumb 'narrow' version\n",
  "BEQ": "g_cycle_count++;\n if (z_flag == 1) {g_cycle_count+=2; //branch if Z flag set\n",
  "BEQN": "g_cycle_count++;\n if (z_flag == 1) {g_cycle_count+=2; //thumb 'narrow' version\n",
  "BMI": "g_cycle_count++;\n if (n_flag == 1) {g_cycle_count+=2; //branch if N flag set\n",
  "BMIN": "g_cycle_count++;\n if (n_flag == 1) {g_cycle_count+=2; //thumb 'narrow' version\n",
  "BPL": "g_cycle_count++;\n if (n_flag == 0) {g_cycle_count+=2; //branch if N flag clear\n",
  "BPLN": "g_cycle_count++;\n if (n_flag == 0) {g_cycle_count+=2; //thumb 'narrow' version\n",
  "BVC": "g_cycle_count++;\n if (v_flag == 0) {g_cycle_count+=2; //branch if V flag clear\n",
  "BVCN": "g_cycle_count++;\n if (v_flag == 0) {g_cycle_count+=2; //thumb 'narrow' version\n",
  "BVS": "g_cycle_count++;\n if (v_flag == 1) {g_cycle_count+=2; //branch if V flag set\n",
  "BVSN": "g_cycle_count++;\n if (v_flag == 1) {g_cycle_count+=2; //thumb 'narrow' version\n",
  
  "BHI": "g_cycle_count++;\n if (c_flag == 1 && z_flag == 0) {g_cycle_count+=2; //branch if C flag set and Z flag clear\n",
  "BHIN": "g_cycle_count++;\n if (c_flag == 1 && z_flag == 0) {g_cycle_count+=2; //thumb 'narrow' version\n",
  "BLS": "g_cycle_count++;\n if (c_flag == 0 && z_flag == 1) {g_cycle_count+=2; //branch if C flag clear and Z flag set\n",
  "BLSN": "g_cycle_count++;\n if (c_flag == 0 && z_flag == 1) {g_cycle_count+=2; //thumb 'narrow' version\n",
  
  "BGE": "g_cycle_count++;\n if ((n_flag == 1 && v_flag == 1) || (n_flag == 0 && v_flag == 0)) {g_cycle_count+=2; //branch if ((N flag set and V flag set) or (N flag clear and V flag clear))\n",
  "BGEN": "g_cycle_count++;\n if ((n_flag == 1 && v_flag == 1) || (n_flag == 0 && v_flag == 0)) {g_cycle_count+=2; //thumb 'narrow' version\n",
  "BLT": "g_cycle_count++;\n if ((n_flag == 1 && v_flag == 0) || (n_flag == 0 && v_flag == 1)) {g_cycle_count+=2; //branch if ((N flag set and V flag clear) or if (N flag clear and V flag set))\n",
  "BLTN": "g_cycle_count++;\n if ((n_flag == 1 && v_flag == 0) || (n_flag == 0 && v_flag == 1)) {g_cycle_count+=2; //thumb 'narrow' version\n",
  
  "BGT": "g_cycle_count++;\n if (z_flag == 0 && ((n_flag == 1 || v_flag == 1) || (n_flag == 0 && v_flag == 0))) {g_cycle_count+=2; //branch if (Z flag clear and ((N flag set or V flag set) or (N flag clear or V flag clear)))\n",
  "BGTN": "g_cycle_count++;\n if (z_flag == 0 && ((n_flag == 1 && v_flag == 1) || (n_flag == 0 && v_flag == 0))) {g_cycle_count+=2; //thumb 'narrow' version\n",
  "BLE": "g_cycle_count++;\n if (z_flag == 1 || ((n_flag == 1 && v_flag == 0) || (n_flag == 0 && v_flag == 1))) {g_cycle_count+=2; //branch if (Z flag set or ((N flag set and V flag clear) or (N flag clear and V flag set)))\n",
  "BLEN": "g_cycle_count++;\n if (z_flag == 1 || ((n_flag == 1 && v_flag == 0) || (n_flag == 0 && v_flag == 1))) {g_cycle_count+=2; //thumb 'narrow' version\n"
  }
