{
  "ADC": "Rd = RN + op2 + carry;",
  "ADD": "Rd = Rn + Op2;",
  "AND": "Rd = Rn AND Op2;",
  "B": "R15 = address;\n\n",
  "BIC": "Rd = Rn AND NOT Op2;",
  "BL": "R14 = R15, R15 := address;",
  "BX": "R15 = Rn; \n T bit = Rn[0];",
  "CDP": "(Coprocessor-specific);",
  "CMN": "CPSR flags = Rn + Op2;",
  "CMP": "CPSR flags = Rn - Op2;",
  "EOR": "Rd = (Rn AND NOT Op2) OR (op2 AND NOT Rn);",
  "LDC": "Coprocessor load;",
  "LDM": "Stack manipulation (Pop);",
  "LDR": "Rd = (address);",
  "MCR": "cRn = rRn {<op>cRm};",
  "MLA": "Rd = (Rm * Rs) + Rn;",
  "MOV": "Rd = Op2;",
  "MRC": "Rn = cRn {<op>cRm};",
  "MRS": "Rn = PSR;",
  "MSR": "PSR = Rm;",
  "MUL": "Rd = Rm * Rs;",
  "MVN": "Rd = 0xFFFFFFFF EOR Op2;",
  "ORR": "Rd = Rn OR Op2;",
  "RSB": "Rd = Op2 - Rn;",
  "RSC": "Rd = Op2 - Rn - 1 + Carry;",
  "SBC": "Rd = Rn - Op2 - 1 + Carry;",
  "STC": "address = CRn;",
  "PUSH": "Stack manipulation (Push);",
  "STR": "<address> = Rd;",
  "SUB": "Rd = Rn - Op2;",
  "SWI": "OS call;",
  "SWP": "Rd = [Rn], [Rn] := Rm;",
  "TEQ": "CPSR flags = Rn EOR Op2;",
  "TST": "CPSR flags = Rn AND Op2;",
  "LSRS": "Rd = (op1 >> op2);",
  "LSLS": "Rd = (op1 << op2);"
}