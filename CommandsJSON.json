{
  "ADC": "ADC(A1, A2, carryFlag) ;",
  "ADD": "ADD(A1, A2) ;",
  "ADDS": "ADDS(A1, A2) ;",
  "AND": "AND(A1, A2) ;",
  "ANDS": "ANDS(A1, A2) ;",
  "BIC": "BIC(A1, A2) ;",
  "BX": "//R15 = A1 ; \n T bit = Rn[0] ;",
  "CDP": "//(Coprocessor-specific) ;",
  "CMN": "//cpsr flags = A1 + A2 ;",
  "CMP": "CMP(A1, A2) ;",
  "EOR": "EOR(A1, A2) ;",
  "LDC": "//Coprocessor load ;",
  "LDM": "//stack manipulation (Pop) ;",
  "LDR": "//??How are we handling memory??A1 = Memory[ S2_3 /8 ] ;",
  "LDRB": "//??How are we handling memory??A1 = Memory[ S2_3 /8 ] ;",
  "MCR": "cA1 = rA1 {<op>cRm} ;",
  "MLA": "MLA(A1, Rm, Rs) ;",
  "MOV": "MOV(A1, A2) ;",
  "MOVS": "MOVS(A1, A2) ;",
  "MRC": "//??A1 = cA1 {<op>cRm} ;",
  "MRS": "//MRS(A1, PSR) ;",
  "MSR": "//MSR(PSR, Rm) ;",
  "MUL": "//MUL(A1 = Rm * Rs ;",
  "MVN": "MVN(A1, A2) ;",
  "ORR": "ORR(A1, A2) ;",
  "ORRS": "ORRS(A1 ,A2) ;",
  "RSB": "RSB(A1 ,A2) ;",
  "RSC": "RSC(A1, A2, Carry) ;",
  "SBC": "SBC(A1, A2, Carry) ;",
  "STC": "//MEMORY[ ADDRESS ]= CA1 ;",
  "PUSH": "//stack manipulation (Push) ;",
  "STR": "//Memory[ <ADDRESS> ] = A1 ;",
  "STRB": "//Memory[ <ADDRESS> ] = A1 ;",
  "SUB": "SUB(A1 ,A2) ;",
  "SUBS": "SUBS(A1, A2) ;",
  "SWI": "//OS call ;",
  "SWP": "//A1 = [A1], [A1] := Rm ;",
  "TEQ": "//cpsr flags = A1 EOR A2 ;",
  "TST": "TST(A1, A2) ;",
  "LSRS": "LSRS(A1, A2, A3) ;",
  "LSLS": "LSLS(A1, A2, A3) ;",
  "BNE": "//if(result != 0){\n    goto A1 ;}",
  "BEQ": "//if(result == 0){ goto A1 ; }",
  "BEQ.N": "//if(result == 0){ goto A1 ; }",
  "BNE.N": "//if(result != 0){\n    goto A1 ;}",
  "B": "//goto A1 ;",
  "BL": "//FUNCTION ; ",
  "B.N": "//goto A1 ;",
  "BCS.N": "//if(!(result & (1 << 31))){ goto A1 ; }",
  "UXTB": "",
  "BICS": "",
  "POP": ""
}